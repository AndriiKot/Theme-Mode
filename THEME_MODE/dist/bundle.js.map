{"version":3,"file":"bundle.js","mappings":"mBAAA,MAAMA,EAAa,SAACC,GAAqD,IAArCC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAUH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAChEF,EAAeM,OAAOL,GACtBD,EAAeM,OAAOD,EACxB,ECFME,EAAyB,SAC7BC,GAIG,IAHHC,EAASP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACZQ,EAAGR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACNS,EAAUT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAETM,EAAUI,SAASH,GACrBI,aAAaC,QAAQJ,EAAKD,GAE1BI,aAAaC,QAAQJ,EAAKC,EAE9B,ECRMI,EAAiBC,SAASC,cAAc,qBACxCC,EAAkBF,SAASC,cAAc,gCACzCE,EAAQC,MAAMC,KAClBL,SAASC,cAAc,+BAA+BK,UAGlDC,EAAOP,SAASO,KA8BlBA,EAAKf,UAAUI,SAAS,SAC1BY,QAAQC,IAAI,SAEVF,EAAKf,UAAUI,SAAS,UAC1BY,QAAQC,IAAI,YAcdV,EAAeW,iBAAiB,SAlCfC,KACf5B,EAAWwB,EAAKf,UAAW,OAAQ,QAAQ,IAkC7CO,EAAeW,iBAAiB,SA/BXE,MC3BE,SAACC,GAAuC,IAAzBpB,EAASP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UAAnBA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAC5B4B,SAASC,IACXA,EAAGvB,UAAUF,OAAOG,EAAU,GAElC,CDwBEuB,CAAe,KAAMb,EAAM,IA+B7BJ,EAAeW,iBAAiB,SAhDPO,KACvB1B,EAAuBgB,EAAKf,UAAW,OAAQ,aAAc,QAAQ,IAiDvEU,EAAgBQ,iBAAiB,SA1CdQ,KACjBnC,EAAWwB,EAAKf,UAAW,OAAQ,OAAO,IA0C5CU,EAAgBQ,iBAAiB,SA/CNS,KACzB5B,EAAuBgB,EAAKf,UAAW,OAAQ,cAAe,OAAO,G","sources":["webpack://theme-mode/./js/modeSwitch.js","webpack://theme-mode/./js/localStorage/setModeLocalStorage.js","webpack://theme-mode/./main.js","webpack://theme-mode/./js/toggleElements.js"],"sourcesContent":["const switchMode = (elementClasses, className1 = '', className2 = '') => {\n  elementClasses.toggle(className1);\n  elementClasses.toggle(className2);\n};\n\nexport { switchMode };\n","\nconst localStorageSetElement = (\n  classList,\n  className = '',\n  key = '',\n  otherValue = ''\n) => {\n  if (classList.contains(className)) {\n    localStorage.setItem(key, className);\n  } else {\n    localStorage.setItem(key, otherValue);\n  }\n};\n\nexport { localStorageSetElement };\n","import { switchMode } from './js/modeSwitch.js';\nimport { localStorageSetElement } from './js/localStorage/setModeLocalStorage.js';\nimport { toggleElements } from './js/toggleElements.js';\n\nconst btnSwitchTheme = document.querySelector('.btn__switch-mode');\nconst btnSwitchShades = document.querySelector('.btn__switch-shades_of_color');\nconst boxes = Array.from(\n  document.querySelector('.box_wrapper_container-text').children\n);\n\nconst body = document.body;\n\nconst darkLocalStorage = () => {\n  localStorageSetElement(body.classList, 'dark', 'theme-mode', 'light');\n};\n\nconst shadesLocalStorage = () => {\n  localStorageSetElement(body.classList, 'cool', 'shades-mode', 'warm');\n};\n\nconst shadesMode = () => {\n  switchMode(body.classList, 'warm', 'cool');\n};\n\nconst darkMode = () => {\n  switchMode(body.classList, 'dark', 'light');\n};\n\nconst newTextTitle = () => {\n  toggleElements(null, boxes);\n};\n\n// const colorMediaIsDark = () => {\n//   return (\n//     window.matchMedia &&\n//     window.matchMedia('(prefers-color-scheme: dark)').matches\n//   );\n// };\n\n// if (localStorage.getItem('theme-mode')) {\nif (body.classList.contains('dark')) {\n  console.log('DARK!');\n}\nif (body.classList.contains('light')) {\n  console.log('Light!!!');\n}\n\n//   if (localStorage.getItem('theme-mode') === 'dark') {\n//     body.classList.add('dark');\n//     body.classList.remove('light');\n//   }\n// }\n\n// if (localStorage.getItem(\"shades-mode\")) {\n//   shadesMode();\n//   console.log(\"Shades mode\");\n// }\n\nbtnSwitchTheme.addEventListener('click', darkMode);\nbtnSwitchTheme.addEventListener('click', newTextTitle);\nbtnSwitchTheme.addEventListener('click', darkLocalStorage);\n\nbtnSwitchShades.addEventListener('click', shadesMode);\nbtnSwitchShades.addEventListener('click', shadesLocalStorage);\n","\r\nconst toggleElements = (_e, arr = [], className = 'active') => {\r\n  arr.forEach((el) => {\r\n    el.classList.toggle(className);\r\n  });\r\n};\r\n\r\nexport { toggleElements };\r\n"],"names":["switchMode","elementClasses","className1","arguments","length","undefined","className2","toggle","localStorageSetElement","classList","className","key","otherValue","contains","localStorage","setItem","btnSwitchTheme","document","querySelector","btnSwitchShades","boxes","Array","from","children","body","console","log","addEventListener","darkMode","newTextTitle","_e","forEach","el","toggleElements","darkLocalStorage","shadesMode","shadesLocalStorage"],"sourceRoot":""}