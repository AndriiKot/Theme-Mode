{"version":3,"file":"bundle.js","mappings":"mBAAA,MAAMA,EAAa,SAACC,GAAqD,IAArCC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAUH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAChEF,EAAeM,OAAOL,GACtBD,EAAeM,OAAOD,EACxB,ECFME,EAAyB,SAC7BC,GAIG,IAHHC,EAASP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACZQ,EAAGR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACNS,EAAUT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAETM,EAAUI,SAASH,GACrBI,aAAaC,QAAQJ,EAAKD,GAE1BI,aAAaC,QAAQJ,EAAKC,EAE9B,ECXMI,EAA4B,SAChCC,EACAC,EACAC,EACAC,GAEG,IADHC,EAAElB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAEAc,EAAQJ,SAASO,KACpBH,EAAQV,OAAOW,GACfD,EAAQV,OAAOY,GACfE,IAEJ,ECRMC,EAAiBC,SAASC,cAAc,qBACxCC,EAAkBF,SAASC,cAAc,gCACzCE,EAAcH,SAASI,KAAKlB,UAC5BmB,EAAoBd,aAAae,QAAQ,cACzCC,EAAqBhB,aAAae,QAAQ,eAE1CE,EAAcC,MAAMC,KACxBV,SAASC,cAAc,sCAAsCU,UAGzDC,EAAcH,MAAMC,KACxBV,SAASC,cAAc,uCAAuCU,UAmB1DE,EAAgBC,GAAQ,MClCP,SAACC,GAAuC,IAAzB5B,EAASP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,UAAnBA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAC5BoC,SAASC,IACXA,EAAG/B,UAAUF,OAAOG,EAAU,GAElC,CD+BE+B,CAAe,KAAMJ,EAAI,EAU3BrB,EACEU,EACA,OACA,QACAE,EACAQ,EAAaL,IAGff,EAA0BU,EAAa,OAAQ,OAAQI,EAAoBM,EAAaD,IAExF,MAAMO,EAAY,SAACC,IAAQxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACxBoC,SAAStB,IACX0B,EAAIC,iBAAiB,QAAS3B,EAAQ,GAE1C,EAEAyB,EAAUpB,EAAgB,CA/BTuB,KACf7C,EAAW0B,EAAa,OAAQ,QAAQ,EA8BLU,EAAaL,GA3CzBe,KACvBtC,EAAuBkB,EAAa,OAAQ,aAAc,QAAQ,IA2CpEgB,EAAUjB,EAAiB,CApCRsB,KACjB/C,EAAW0B,EAAa,OAAQ,OAAO,EAmCDU,EAAaD,GAxC1Ba,KACzBxC,EAAuBkB,EAAa,OAAQ,cAAe,OAAO,G","sources":["webpack://theme-mode/./js/modeSwitch.js","webpack://theme-mode/./js/localStorage/setModeLocalStorage.js","webpack://theme-mode/./js/localStorage/installStylesLocalStorage.js","webpack://theme-mode/./main.js","webpack://theme-mode/./js/toggleElements.js"],"sourcesContent":["const switchMode = (elementClasses, className1 = '', className2 = '') => {\n  elementClasses.toggle(className1);\n  elementClasses.toggle(className2);\n};\n\nexport { switchMode };\n","\nconst localStorageSetElement = (\n  classList,\n  className = '',\n  key = '',\n  otherValue = ''\n) => {\n  if (classList.contains(className)) {\n    localStorage.setItem(key, className);\n  } else {\n    localStorage.setItem(key, otherValue);\n  }\n};\n\nexport { localStorageSetElement };\n","\nconst installStylesLocalStorage = (\n  element,\n  style1,\n  style2,\n  getLocalStorage,\n  fn = () => {}\n) => {\n  if (!element.contains(getLocalStorage)) {\n    element.toggle(style1);\n    element.toggle(style2);\n    fn();\n  }\n};\n\nexport { installStylesLocalStorage };\n\n","import { switchMode } from './js/modeSwitch.js';\nimport { localStorageSetElement } from './js/localStorage/setModeLocalStorage.js';\nimport { toggleElements } from './js/toggleElements.js';\nimport { installStylesLocalStorage } from './js/localStorage/installStylesLocalStorage.js';\n\nconst btnSwitchTheme = document.querySelector('.btn__switch-mode');\nconst btnSwitchShades = document.querySelector('.btn__switch-shades_of_color');\nconst bodyClasses = document.body.classList;\nconst storageThemeValue = localStorage.getItem('theme-mode');\nconst storageShadesValue = localStorage.getItem('shades-mode');\n\nconst themesArray = Array.from(\n  document.querySelector('.box_wrapper_container-text__theme').children\n);\n\nconst shadesArray = Array.from(\n  document.querySelector('.box_wrapper_container-text__shades').children\n);\n\nconst darkLocalStorage = () => {\n  localStorageSetElement(bodyClasses, 'dark', 'theme-mode', 'light');\n};\n\nconst shadesLocalStorage = () => {\n  localStorageSetElement(bodyClasses, 'cool', 'shades-mode', 'warm');\n};\n\nconst shadesMode = () => {\n  switchMode(bodyClasses, 'warm', 'cool');\n};\n\nconst darkMode = () => {\n  switchMode(bodyClasses, 'dark', 'light');\n};\n\nconst newTextTitle = (arr) => () => {\n  toggleElements(null, arr);\n};\n\n// const colorMediaIsDark = () => {\n//   return (\n//     window.matchMedia &&\n//     window.matchMedia('(prefers-color-scheme: dark)').matches\n//   );\n// };\n\ninstallStylesLocalStorage(\n  bodyClasses,\n  'dark',\n  'light',\n  storageThemeValue,\n  newTextTitle(themesArray)\n);\n\ninstallStylesLocalStorage(bodyClasses, 'cool', 'warm', storageShadesValue, newTextTitle(shadesArray));\n\nconst eventsBtn = (btn, arr = []) => {\n  arr.forEach((element) => {\n    btn.addEventListener('click', element);\n  });\n};\n\neventsBtn(btnSwitchTheme, [darkMode, newTextTitle(themesArray), darkLocalStorage]);\neventsBtn(btnSwitchShades, [shadesMode, newTextTitle(shadesArray), shadesLocalStorage]);\n\n","\nconst toggleElements = (_e, arr = [], className = 'active') => {\n  arr.forEach((el) => {\n    el.classList.toggle(className);\n  });\n};\n\nexport { toggleElements };\n"],"names":["switchMode","elementClasses","className1","arguments","length","undefined","className2","toggle","localStorageSetElement","classList","className","key","otherValue","contains","localStorage","setItem","installStylesLocalStorage","element","style1","style2","getLocalStorage","fn","btnSwitchTheme","document","querySelector","btnSwitchShades","bodyClasses","body","storageThemeValue","getItem","storageShadesValue","themesArray","Array","from","children","shadesArray","newTextTitle","arr","_e","forEach","el","toggleElements","eventsBtn","btn","addEventListener","darkMode","darkLocalStorage","shadesMode","shadesLocalStorage"],"sourceRoot":""}